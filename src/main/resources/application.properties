spring.application.name=SmartExpenseTracker
## =======================================
## POSTGRESQL DATABASE CONFIGURATION
## =======================================
#spring.datasource.url=jdbc:postgresql://localhost:5432/expense_tracker
#spring.datasource.username=postgres
#spring.datasource.password=post@1234
#spring.datasource.driver-class-name=org.postgresql.Driver

# =======================================
# EXPLICIT DATABASE CONFIGURATION
# =======================================
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

# Explicitly set the platform to avoid detection issues
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# =======================================
# JPA & HIBERNATE CONFIGURATION
# =======================================
# This tells Hibernate to update the database schema automatically based on your entities
spring.jpa.hibernate.ddl-auto=update

# Show the SQL queries generated by Hibernate in the console (useful for debugging)
spring.jpa.show-sql=true

# Format the SQL logs to be more readable
spring.jpa.properties.hibernate.format_sql=true

# =======================================
# JWT CONFIGURATION
# =======================================
# Use a long, random, and secure string for this in a real application.
# You can generate one from a site like https://www.allkeysgenerator.com/
jwt.secret=A5hC0JKUPviOAQAHoks1gRmuZVnR4kz1dF4VYszDbUE4PDOiyJBNA67a7mlrcxS2

# =======================================
# FILE UPLOAD CONFIGURATION
# =======================================
# Directory to store uploaded receipt images
file.upload-dir=./uploads